name: Build OpenWRT packages

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  check-version:
    name: Check version match
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check version match
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          JUSTCLASH_VERSION=$(grep '^PKG_VERSION:=' justclash/Makefile | cut -d '=' -f 2)
          LUCI_APP_JUSTCLASH_VERSION=$(grep '^PKG_VERSION:=' luci-app-justclash/Makefile | cut -d '=' -f 2)

          echo "Justclash: $JUSTCLASH_VERSION"
          echo "Luci-app-justclash: $LUCI_APP_JUSTCLASH_VERSION"
          echo "Pushed tag: $TAG_VERSION"

          if [ "$JUSTCLASH_VERSION" != "$TAG_VERSION" ] || [ "$LUCI_APP_JUSTCLASH_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Version mismatch. Release build cancelled."
            exit 1
          fi

  build:
    name: Build justclash ${{ matrix.type }}
    runs-on: ubuntu-latest
    needs: check-version
    strategy:
      matrix:
        type: [stable, snapshot]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build and push ${{ matrix.type }}
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile-${{ matrix.type }}
          context: .
          tags: justclash/build:${{ matrix.type }}
          push: true

      - name: Create ${{ matrix.type }} Docker container
        run: docker create --name ${{ matrix.type }} justclash/build:${{ matrix.type }}

      - name: Copy files from ${{ matrix.type }} Docker container
        run: |
          mkdir -p ./output/${{ matrix.type }}
          rm -f ./output/${{ matrix.type }}/*.${{ matrix.type == 'stable' && 'ipk' || 'apk' }}
          docker cp ${{ matrix.type }}:/builder/bin/packages/x86_64/utilities/. ./output/${{ matrix.type }}/
          docker cp ${{ matrix.type }}:/builder/bin/packages/x86_64/luci/. ./output/${{ matrix.type }}/
          if [ "${{ matrix.type }}" == "snapshot" ]; then
            rm -rf ./output/${{ matrix.type }}/tmp
          fi

      - name: Rename all output packages (replace all _ with -)
        if: matrix.type == 'stable'
        shell: bash
        run: |
          for f in ./output/${{ matrix.type }}/*.ipk; do
            [ -e "$f" ] || continue
            base=$(basename "$f")
            newname=$(echo "$base" | sed 's/_/-/g')
            mv "$f" "./output/${{ matrix.type }}/$newname"
          done

      - name: Renaming translation file
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          mv ./output/${{ matrix.type }}/luci-i18n-justclash-ru-*.${{ matrix.type == 'stable' && 'ipk' || 'apk' }} "./output/${{ matrix.type }}/luci-i18n-justclash-ru-${VERSION}.${{ matrix.type == 'stable' && 'ipk' || 'apk' }}"

      - name: Remove Docker ${{ matrix.type }} container
        run: docker rm ${{ matrix.type }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-files-${{ github.ref_name }}-${{ matrix.type }}
          path: ./output/${{ matrix.type }}/*.${{ matrix.type == 'stable' && 'ipk' || 'apk' }}
          retention-days: 1
          if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download stable artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-files-${{ github.ref_name }}-stable
          path: ./output/release

      - name: Download snapshot artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-files-${{ github.ref_name }}-snapshot
          path: ./output/release

      - name: Extract changelog for current version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          awk '/## \['"$VERSION"'\]/ {flag=1} /^## \[/ {if(flag && !/## \['"$VERSION"'\]/) exit} flag' ./RELEASENOTES.md > ./tmp.md

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./output/release/*.*
          body_path: ./tmp.md
          draft: false
          prerelease: false
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
